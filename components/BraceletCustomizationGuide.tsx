import React, { useState } from 'react';
import { CloseIcon } from './IconComponents.tsx';
import { useLanguage } from '../i18n/LanguageContext.tsx';

const DailyColorGuideModal: React.FC<{ onClose: () => void }> = ({ onClose }) => {
    const { lang } = useLanguage();

    const dailyData = {
        th: [
            { day: '‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå', color: '‡∏™‡∏µ‡πÅ‡∏î‡∏á', meaning: '‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏≠‡∏≥‡∏ô‡∏≤‡∏à ‡∏ö‡∏≤‡∏£‡∏°‡∏µ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à' },
            { day: '‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå', color: '‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏≠‡πà‡∏≠‡∏ô / ‡∏Ñ‡∏£‡∏µ‡∏°', meaning: '‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤ ‡∏™‡∏á‡∏ö‡πÉ‡∏à ‡∏ô‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡∏™‡∏∏‡∏Ç' },
            { day: '‡∏ß‡∏±‡∏ô‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£', color: '‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π', meaning: '‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô' },
            { day: '‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò', color: '‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß', meaning: '‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏á‡∏≠‡∏Å‡∏á‡∏≤‡∏°' },
            { day: '‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ', color: '‡∏™‡∏µ‡∏™‡πâ‡∏° / ‡∏ó‡∏≠‡∏á', meaning: '‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏õ‡∏±‡∏ç‡∏ç‡∏≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' },
            { day: '‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå', color: '‡∏™‡∏µ‡∏ü‡πâ‡∏≤ / ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô', meaning: '‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡πÄ‡∏¢‡∏∑‡∏≠‡∏Å‡πÄ‡∏¢‡πá‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à' },
            { day: '‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå', color: '‡∏™‡∏µ‡∏°‡πà‡∏ß‡∏á / ‡∏î‡∏≥', meaning: '‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á' }
        ],
        en: [
            { day: 'Sunday', color: 'Red', meaning: 'Boosts power, authority, and confidence' },
            { day: 'Monday', color: 'Light Yellow / Cream', meaning: 'Brings compassion, calmness, and peace' },
            { day: 'Tuesday', color: 'Pink', meaning: 'Enhances love, charm, and warmth' },
            { day: 'Wednesday', color: 'Green', meaning: 'Promotes health, vitality, and growth' },
            { day: 'Thursday', color: 'Orange / Gold', meaning: 'Supports wisdom, learning, and success' },
            { day: 'Friday', color: 'Blue', meaning: 'Encourages calmness, communication, and understanding' },
            { day: 'Saturday', color: 'Purple / Black', meaning: 'Builds strength, stability, and spiritual protection' }
        ]
    };
    
    const content = lang === 'th' ? dailyData.th : dailyData.en;
    const title = lang === 'th' ? 'üìÖ ‡∏™‡∏µ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢' : 'üìÖ Daily Colors & Their Meanings';

    return (
        <div className="fixed inset-0 bg-black/60 z-50 flex items-center justify-center p-4 backdrop-blur-sm" onClick={onClose}>
            <div className="bg-[var(--c-surface)] rounded-xl shadow-2xl w-full max-w-lg overflow-hidden relative" onClick={(e) => e.stopPropagation()}>
                <div className="p-6">
                    <h3 className="text-2xl font-bold text-center !text-[var(--c-heading)] mb-4">
                        {title}
                    </h3>
                    <div className="space-y-2 text-left text-sm sm:text-base text-[var(--c-text-primary)]/90">
                        {content.map(item => (
                            <div key={item.day} className="grid grid-cols-3 gap-2 items-start p-2 rounded-md hover:bg-[var(--c-surface-alt)]">
                                <div className="font-semibold col-span-1">{item.day}</div>
                                <div className="text-gray-700 col-span-1">{item.color}</div>
                                <div className="text-gray-600 italic text-xs sm:text-sm col-span-1">{item.meaning}</div>
                            </div>
                        ))}
                    </div>
                     <div className="text-center mt-6">
                        <button onClick={onClose} className="px-6 py-2 rounded-lg bg-stone-200 text-stone-700 font-semibold hover:bg-stone-300 transition-colors">
                            ‡∏õ‡∏¥‡∏î / Close
                        </button>
                    </div>
                </div>
                 <button onClick={onClose} className="absolute top-4 right-4 text-stone-500 hover:text-stone-800 transition-colors rounded-full p-1 hover:bg-stone-100" aria-label="Close">
                    <CloseIcon className="h-6 w-6"/>
                </button>
            </div>
        </div>
    );
};


const BraceletCustomizationGuide: React.FC = () => {
    const { lang } = useLanguage();
    const [isColorGuideOpen, setIsColorGuideOpen] = useState(false);

    const instructions = {
        th: {
            title: 'üß† ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡πÑ‡∏•‡∏≠‡∏≥‡∏û‡∏±‡∏ô‡πÉ‡∏ô‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
            steps: [
                '<strong>1. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</strong><br/>&emsp;‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:<br/>&emsp;üîò ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡∏û‡∏≠‡∏î‡∏µ ‡∏´‡∏£‡∏∑‡∏≠ üîò ‡πÉ‡∏™‡πà‡∏´‡∏•‡∏ß‡∏°‡∏™‡∏ö‡∏≤‡∏¢',
                '<strong>2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö:</strong>',
            ],
            styles: [
                '<strong>üî∏ ‡∏Å‡∏≥‡πÑ‡∏•‡πÇ‡∏ó‡∏ô‡∏™‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß</strong><br/>&ndash; ‡∏Ñ‡∏•‡∏¥‡∏Å ‚Äú‡∏•‡∏ö‡πÄ‡∏°‡πá‡∏î‡∏≠‡∏≥‡∏û‡∏±‡∏ô‚Äù ‡∏à‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á 1 ‡πÄ‡∏°‡πá‡∏î<br/>&ndash; ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏°‡πá‡∏î‡∏≠‡∏≥‡∏û‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î',
                '<strong>üî∏ ‡∏Å‡∏≥‡πÑ‡∏•‡∏´‡∏•‡∏≤‡∏Å‡∏™‡∏µ / Fancy ‚Äì ‡∏°‡∏µ 2 ‡∏ß‡∏¥‡∏ò‡∏µ:</strong><br/>1Ô∏è‚É£ ‡∏Ñ‡∏•‡∏¥‡∏Å ‚Äú‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡πá‡∏î‡∏≠‡∏≥‡∏û‡∏±‡∏ô‚Äù ‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î‡πÇ‡∏î‡∏¢‡πÅ‡∏ï‡∏∞‡πÄ‡∏°‡πá‡∏î‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á<br/>2Ô∏è‚É£ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞ ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡∏∞‡πÄ‡∏°‡πá‡∏î‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏ô‡∏≤‡∏î'
            ]
        },
        en: {
            title: 'üß† How to Design Your Custom Amber Bracelet',
            steps: [
                '<strong>1. Start by selecting your wrist size.</strong><br/>&emsp;Choose between:<br/>&emsp;üîò Snug Fit or üîò Loose Fit',
                '<strong>2. Choose your bracelet style:</strong>',
            ],
            styles: [
                '<strong>üî∏ Single-Color Design</strong><br/>&ndash; Click ‚ÄúRemove Bead(s)‚Äù until only 1 bead remains<br/>‚Äì Then click that bead to select color and size',
                '<strong>üî∏ Fancy / Multi-Color ‚Äì 2 Options:</strong><br/>1Ô∏è‚É£ Click ‚ÄúAdd Bead(s)‚Äù and customize by tapping the preview beads to adjust color and size<br/>2Ô∏è‚É£ Use the Intelligent Designer to generate a pattern, then tap beads in the preview row to tweak colors or sizes as needed'
            ]
        }
    };
    
    const currentInstructions = lang === 'th' ? instructions.th : instructions.en;
    const dailyColorGuideButtonText = lang === 'th' ? 'üìÖ ‡∏™‡∏µ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢' : 'üìÖ Daily Colors & Meanings';

    return (
        <>
            {isColorGuideOpen && <DailyColorGuideModal onClose={() => setIsColorGuideOpen(false)} />}
            
            <div className="prose-none text-[var(--c-text-primary)]/90 mx-auto mb-12 p-6 rounded-lg border border-[#AD8141] bg-[#FDF6EC]">
                <h2 className="text-2xl md:text-3xl font-bold text-[var(--c-heading)] my-0">{currentInstructions.title}</h2>

                <div className="mt-4 space-y-4 text-base md:text-lg">
                    {currentInstructions.steps.map((step, i) => <p key={i} dangerouslySetInnerHTML={{ __html: step }} />)}
                    <div className="pl-4">
                        {currentInstructions.styles.map((style, i) => <p key={i} dangerouslySetInnerHTML={{ __html: style }} />)}
                    </div>
                </div>

                <div className="text-center mt-6 pt-4 border-t border-[#AD8141]/30">
                    <button 
                        onClick={() => setIsColorGuideOpen(true)}
                        className="text-sm font-semibold text-amber-800 hover:text-amber-900 transition-colors underline"
                    >
                        {dailyColorGuideButtonText}
                    </button>
                </div>
            </div>
        </>
    );
};

export default BraceletCustomizationGuide;
